#ifndef __GUIMyFrame__
#define __GUIMyFrame__

//// end generated include
#include <wx/wx.h>
#include <wx/wxprec.h>
#include <wx/dcbuffer.h>
#include <wx/window.h>
#include <wx/scrolbar.h>
#include <wx/clipbrd.h>
#include <wx/printdlg.h>
#include <wx/mousestate.h>
#include <wx/dcclient.h>

#include <vector>
#include <array>
#include <string>
#include <exception>

#include "myMatrix.h"
#include "CustomDialog.h"
#include "transformations.h"

/**
@file
Subclass of MyFrame2, which is generated by wxFormBuilder.
*/

#include "GUI.h"

//// end generated include

/** Implementing MyFrame2 */
class GUIMyFrame : public MyFrame2
{
protected:
	// Handlers for MyFrame2 events.
	void onUpdateUI(wxUpdateUIEvent& event);
	void saveToFileClick(wxCommandEvent& event);
	void on_addSource1Click(wxCommandEvent& event);
	void on_addSource2Click(wxCommandEvent& event);
	void onScrollX(wxScrollEvent& event);
	void onScrollY(wxScrollEvent& event);
	void onScrollZ(wxScrollEvent& event);
	void nextClick(wxCommandEvent& event);
	void prevClick(wxCommandEvent& event);
	void copyClick(wxCommandEvent& event);
	void startClick(wxCommandEvent& event);
	void resetClick(wxCommandEvent& event);


public:

	void Paint();
	void Draw();
	

	double src_distance(double x1, double y1, double x2, double y2);
	/** Constructor */
	GUIMyFrame(wxWindow* parent);
	//// end generated class members

	std::string str = "10";


	myMatrix _transform;


	std::vector<std::vector<wxPoint>> _points;
	std::vector<std::vector<wxPoint>> _draw_points;
	std::vector<std::vector<double>> _distance;
	std::vector<double> _amplitude;
	std::vector<double> _frequency;


	wxImage image;
	wxBitmap buffer;
	wxClientDC MyDC_client;
	int counter = 0;
	unsigned seconds = 0;


	double _point_scale_x;
	double _point_scale_y;
	unsigned _points_in_x, _points_in_y;


	double time = 0.;
	wxTimer timer;
	bool flag = true;
	int duration = 2;
	unsigned how_much = 0;


	/// <summary>
	/// seria danych dla drugiego punktu
	/// </summary>

	bool flag2 = true;


	std::vector<std::vector<wxPoint>> _points_2;
	std::vector<std::vector<wxPoint>> _draw_points_2;
	std::vector<std::vector<double>> _distance_2;
	std::vector<double> _amplitude_2;
	std::vector<double> _frequency_2;
	unsigned how_much_2 = 0;
};

#endif // __GUIMyFrame__
